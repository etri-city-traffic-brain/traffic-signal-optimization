FROM ubuntu:20.04
RUN apt-get update && yes | apt-get update
RUN apt-get install -y build-essential

# 1. install library for dependency
# 1.1  libboost_1_71 for SALT simulator
WORKDIR /to_install
COPY ./to_install_uniq/boost_1_71_0.tar.bz2 /to_install
RUN tar xvfj boost_1_71_0.tar.bz2
WORKDIR /to_install/boost_1_71_0
RUN ./bootstrap.sh --prefix=/usr
RUN ./b2 cxxflags=-fPIC cflags=-fPIC link=static -a
RUN ./b2 install
WORKDIR /
RUN rm -rf /to_install



# 1.2  python, pandas, tensorflow, keras, h5py for optimizer & simulator
# 1.2.1 python for simulator, optimizer
RUN apt-get update

RUN DEBIAN_FRONTEND="noninteractive" apt-get -y install tzdata
RUN apt-get install -y software-properties-common
RUN add-apt-repository ppa:deadsnakes/ppa
RUN apt-get update
RUN apt-get install -y python3.8 python3-pip
#RUN apt-get install -y python3.8-dev
RUN ln -s /usr/bin/python3.8 /usr/bin/python

RUN python --version
RUN python -m pip install --upgrade pip

# 1.2.2 packages for optimizer
RUN python -m pip install tensorflow==2.3.0
RUN python -m pip install keras==2.4.3
#RUN python -m pip install tensorflow==2.0.0
#RUN python -m pip install keras==2.3.1
RUN python -m pip install h5py==2.10.0
RUN python -m pip install pandas
RUN python -m pip install gym
RUN python -m pip install matplotlib
RUN python -m pip install deprecated
RUN python -m pip install --upgrade protobuf==3.20.0
	# to solve following issue
	# TypeError: Descriptors cannot not be created directly
	# If this call came from a _pb2.py file, your generated code is out of date and must be regenerated with protoc >= 3.19.0.



# 1.3 for convenience, install vim editor
RUN apt-get update
RUN apt-get install -y vim

# 2. install simulator
# 2.1 install SALT simulator
COPY ./to_install_uniq/salt /uniq/simulator/salt

# 2.2 install SUMO simulator
#       all dependent lib.s for SUMO are installed
RUN apt-get update
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Seoul
RUN apt-get install -y sumo sumo-tools sumo-doc
#       make a symbolic link
RUN ln -s /usr/share/sumo /uniq/simulator/sumo

# 3. install optimizer
COPY ./to_install_uniq/optimizer /uniq/optimizer

# 4. set environment variable
# 4.1 set env variable for SALT
ENV SALT_HOME=/uniq/simulator/salt
ENV PYTHONPATH=$SALT_HOME/tools:$PYTHONPATH
ENV PATH=$SALT_HOME/bin:$PATH

# 4.2 set env variable for SUMO
ENV SUMO_HOME=/uniq/simulator/sumo
ENV PYTHONPATH=$SUMO_HOME/tools:$PYTHONPATH
ENV PATH=$SUMO_HOME/bin:$PATH

# 5. set working dir
WORKDIR /uniq/optimizer

# 6. execute
#ENTRYPOINT ["/bin/bash", "-l", "-c"]


#
#  여기서는 dependency/환경만 설정하고, 외부의 파일을 이용하여 최적화/시뮬레이션을 실행한다.
#
#  sudo docker run -it -v /home/hunsooni/z.tip/docker/z.dockerfile.3.8.5.all/to_install/uniq:/uniq my_uniq:0.1.b /uniq/run.sh
#  sudo docker run -it -v /home/hunsooni/z.tip/docker/uniq.dockerizing/to_install/uniq/optimizer/data:/uniq/optimizer/data my_uniq:0.2.a /uniq/run.sh
#		.../optimizer/data/config.py 에서 최적화 관련 설정
#		/uniq/run.sh 에서 config.py 복사 후 실행
#
